//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WHampson.Cascara {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WHampson.Cascara.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection must contain at least one element..
        /// </summary>
        internal static string ArgumentExceptionEmptyCollection {
            get {
                return ResourceManager.GetString("ArgumentExceptionEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter cannot be empty or null..
        /// </summary>
        internal static string ArgumentExceptionEmptyString {
            get {
                return ResourceManager.GetString("ArgumentExceptionEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter creates an offset that exceeds the length of the buffer..
        /// </summary>
        internal static string ArgumentExceptionLengthTooLarge {
            get {
                return ResourceManager.GetString("ArgumentExceptionLengthTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nested statement cannot be the same object reference as the current statement..
        /// </summary>
        internal static string ArgumentExceptionNestedStatementReference {
            get {
                return ResourceManager.GetString("ArgumentExceptionNestedStatementReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter must be a non-negative integer..
        /// </summary>
        internal static string ArgumentExceptionNonNegativeInteger {
            get {
                return ResourceManager.GetString("ArgumentExceptionNonNegativeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter exceeds the length of the buffer..
        /// </summary>
        internal static string ArgumentExceptionOffsetTooLarge {
            get {
                return ResourceManager.GetString("ArgumentExceptionOffsetTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter is out of range for the type provided..
        /// </summary>
        internal static string ArgumentExceptionOutOfRangeForType {
            get {
                return ResourceManager.GetString("ArgumentExceptionOutOfRangeForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter must be a primitive type..
        /// </summary>
        internal static string ArgumentExceptionPrimitiveType {
            get {
                return ResourceManager.GetString("ArgumentExceptionPrimitiveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter type does not match expected type..
        /// </summary>
        internal static string ArgumentExceptionTypeMismatch {
            get {
                return ResourceManager.GetString("ArgumentExceptionTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal name for collections used on a symbol that does not represent a collection!.
        /// </summary>
        internal static string InvalidOperationExceptionReservedSymbolName {
            get {
                return ResourceManager.GetString("InvalidOperationExceptionReservedSymbolName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A layout named &apos;{0}&apos; already exists in the namespace..
        /// </summary>
        internal static string LayoutExceptionLayoutExists {
            get {
                return ResourceManager.GetString("LayoutExceptionLayoutExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid version number..
        /// </summary>
        internal static string LayoutExceptionMalformattedLayoutVersion {
            get {
                return ResourceManager.GetString("LayoutExceptionMalformattedLayoutVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Layout version &apos;{0}&apos; is not currently supported..
        /// </summary>
        internal static string LayoutExceptionUnsupportedLayoutVersion {
            get {
                return ResourceManager.GetString("LayoutExceptionUnsupportedLayoutVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access the element of a symbol that does not represent a collection..
        /// </summary>
        internal static string NotSupportedExceptionElementAccess {
            get {
                return ResourceManager.GetString("NotSupportedExceptionElementAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty layout. At least one statement is required..
        /// </summary>
        internal static string SyntaxExceptionEmptyLayout {
            get {
                return ResourceManager.GetString("SyntaxExceptionEmptyLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one file object declaration required..
        /// </summary>
        internal static string SyntaxExceptionEmptyStructure {
            get {
                return ResourceManager.GetString("SyntaxExceptionEmptyStructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing name for Binary Layout..
        /// </summary>
        internal static string SyntaxExceptionMissingLayoutName {
            get {
                return ResourceManager.GetString("SyntaxExceptionMissingLayoutName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing required parameter &apos;{0}&apos;..
        /// </summary>
        internal static string SyntaxExceptionMissingRequiredParameter {
            get {
                return ResourceManager.GetString("SyntaxExceptionMissingRequiredParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected nested statement..
        /// </summary>
        internal static string SyntaxExceptionUnexpectedNestedStatement {
            get {
                return ResourceManager.GetString("SyntaxExceptionUnexpectedNestedStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown identifier &apos;{0}&apos;..
        /// </summary>
        internal static string SyntaxExceptionUnknownIdentifier {
            get {
                return ResourceManager.GetString("SyntaxExceptionUnknownIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid root element name for Binary Layout. Root element must be named &apos;{0}&apos;..
        /// </summary>
        internal static string SyntaxExceptionXmlInvalidRootElement {
            get {
                return ResourceManager.GetString("SyntaxExceptionXmlInvalidRootElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier &apos;{0}&apos; can only be used for the root element..
        /// </summary>
        internal static string SyntaxExceptionXmlInvalidUsageOfRootElement {
            get {
                return ResourceManager.GetString("SyntaxExceptionXmlInvalidUsageOfRootElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected text &apos;{0}&apos; in element &apos;{1}&apos;..
        /// </summary>
        internal static string SyntaxExceptionXmlUnexpectedText {
            get {
                return ResourceManager.GetString("SyntaxExceptionXmlUnexpectedText", resourceCulture);
            }
        }
    }
}
